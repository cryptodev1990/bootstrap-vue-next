# This workflow is for the release please action. It automates releases when using conventional commit messages
# It also auto publishes releases to npm under the @develop tag
# For more information see: https://github.com/google-github-actions/release-please-action

name: release-dev

on:
  push:
    branches:
      - dev

jobs:
  release-please:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    steps:
      - name: Use release please
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          path: packages/bootstrap-vue-3
          package-name: bootstrap-vue-3
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          default-branch: dev
          release-labels: 'autorelease: published'
          
      # The logic below handles the npm publication:

      - name: Clone repository
        uses: actions/checkout@v3
        if: ${{ steps.release.outputs.releases_created }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
        if: ${{ steps.release.outputs.releases_created }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        id: pnpm-install
        with:
          version: 7
          run_install: false
        if: ${{ steps.release.outputs.releases_created }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        if: ${{ steps.release.outputs.releases_created }}

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        if: ${{ steps.release.outputs.releases_created }}

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile
        if: ${{ steps.release.outputs.releases_created }}

      - name: Build library
        run: pnpm run build
        if: ${{ steps.release.outputs.releases_created }}

      - name: Test library
        run: pnpm test
        if: ${{ steps.release.outputs.releases_created }}

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${secrets.NPM_TOKEN}"

      - name: Publish 
        run: pnpm publish --tag develop --filter bootstrap-vue-3 --access=public
        if: ${{ steps.release.outputs.releases_created }}
